version: '3.8'

services:
  app:
    build: .
    container_name: mackenzie-lms
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - MONGODB_URI=mongodb://mongodb:27017/mackenzie_lms
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=${JWT_SECRET:-defaultSecretKey2024!@#}
      - MICROSOFT_CLIENT_ID=${MICROSOFT_CLIENT_ID}
      - MICROSOFT_CLIENT_SECRET=${MICROSOFT_CLIENT_SECRET}
      - APP_ENVIRONMENT=production
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./logs:/app/logs
    networks:
      - lms-network
    restart: unless-stopped

  mongodb:
    image: mongo:6.0
    container_name: mackenzie-lms-mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=mackenzie_lms
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - lms-network
    restart: unless-stopped

  redis:
    image: redis:6.0-alpine
    container_name: mackenzie-lms-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - lms-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Opcional: MongoDB Express para administração
  mongo-express:
    image: mongo-express:latest
    container_name: mackenzie-lms-mongo-express
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=admin123
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin123
    depends_on:
      - mongodb
    networks:
      - lms-network
    profiles:
      - debug

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  lms-network:
    driver: bridge
